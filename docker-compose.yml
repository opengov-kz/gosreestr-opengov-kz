x-airflow-common: &airflow-common
  image: apache/airflow:2.6.1
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
    PYTHONPATH: "${PYTHONPATH:-}:/opt/airflow/dags"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./scripts:/opt/airflow/scripts
    - ./data:/opt/airflow/data
    - ./references:/opt/airflow/references
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:15.1
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      # - ./postgresql/airflow:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    ports:
      - "5432:5432"
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
    - -c
    - |
      mkdir -p /opt/airflow/logs /opt/airflow/dags /opt/airflow/plugins /opt/airflow/scripts /opt/airflow/data
      chmod -R 777 /opt/airflow
      airflow db init
      airflow users create \
        --username airflow \
        --firstname Admin \
        --lastname User \
        --role Admin \
        --email admin@example.com \
        --password airflow

  gosreestr-db:
    image: postgres:15.1
    environment:
      POSTGRES_USER: data_manager
      POSTGRES_PASSWORD: strong_password_here
      POSTGRES_DB: gosreestr_db
    volumes:
      - gosreestr-db-volume:/var/lib/postgresql/data
      - ./postgresql/gosreestr/init-gosreestr-db.sql:/docker-entrypoint-initdb.d/init-gosreestr-db.sql
      # - ./postgresql/init-gosreestr-db.sql:/docker-entrypoint-initdb.d/init-gosreestr-db.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "data_manager"]
      interval: 5s
      retries: 5
    ports:
      - "5433:5432"
    restart: always

volumes:
  postgres-db-volume:
  gosreestr-db-volume: